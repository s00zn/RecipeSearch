{"version":3,"sources":["components/Form.js","components/Recipes.js","App.js","components/Recipe.js","components/Router.js","serviceWorker.js","index.js"],"names":["Form","props","onSubmit","getRecipe","style","marginBottom","className","type","name","Recipes","recipes","map","recipe","src","image_url","alt","title","length","substring","publisher","Link","to","pathname","recipe_id","state","App","e","a","recipeName","target","elements","value","preventDefault","fetch","api_call","json","data","setState","componentDidMount","localStorage","getItem","JSON","parse","componentDidUpdate","stringify","setItem","this","Component","Recipe","activeRecipe","location","req","res","marginTop","href","publisher_url","React","Router","BrowserRouter","Switch","Route","exact","path","component","isLocalhost","Boolean","window","hostname","match","register","navigator","URL","process","origin","addEventListener","swUrl","then","response","status","headers","get","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","catch","console","log","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bc3cbd9f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Form = props => (\r\n    <form onSubmit={props.getRecipe} style={{ marginBottom:\"2rem\" }}>\r\n        <input className=\"form__input\" type=\"text\" name=\"recipeName\"/>\r\n        <button className=\"form__button\">Search</button>\r\n    </form>\r\n);\r\n\r\nexport default Form;\r\n\r\n","import React from 'react';\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\n const Recipes = props => (\r\n     <div className=\"container\">\r\n        <div className=\"row\">\r\n        { (props.recipes || []).map((recipe) => {\r\n            return (\r\n                <div key={ recipe.recipe_id } className=\"col-md-4\" style={{ marginBottom:\"2rem\"}}>\r\n                    <div className=\"recipes__box\">\r\n                        <img className=\"recipe__box-img\" src={ recipe.image_url } alt={ recipe.title } />\r\n                        <div className=\"recipe__text\">\r\n                            <h5 className=\"recipes__title\">\r\n                                { recipe.title.length < 20 ? `${ recipe.title }` : `${ recipe.title.substring(0, 25) }...` }\r\n                            </h5>\r\n                            <p className=\"recipes__subtitle\">Publisher: <span>{ recipe.publisher }</span></p>\r\n                        </div>\r\n                        <button className=\"form__button\">\r\n                            <Link to={{ \r\n                                pathname: `/recipe/${recipe.recipe_id}`,\r\n                                state: { recipe: recipe.title }\r\n                                }}>View recipe</Link>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }) }\r\n        </div>\r\n     </div>\r\n );\r\n\r\n export default Recipes;","import React, { Component } from 'react';\nimport './App.css';\n\nimport Form from \"./components/Form\";\nimport Recipes from \"./components/Recipes\";\n\n//const API_KEY = \"\"; in order to use: ${API_KEY}\n\nclass App extends Component {\n\n  state = {\n    recipes: []\n  }\n\n  getRecipe = async(e) => {\n    const recipeName = e.target.elements.recipeName.value;\n    e.preventDefault();\n    const api_call = await fetch(`https://cors-anywhere.herokuapp.com/https://recipesapi.herokuapp.com/api/search?q=${recipeName}&page=1`);\n\n    const data = await api_call.json();\n    this.setState({ recipes: data.recipes });\n  }\n\n  componentDidMount = () => {\n    const json = localStorage.getItem(\"recipes\");\n    const recipes = JSON.parse(json);\n    this.setState({ recipes });\n  }\n\n  componentDidUpdate = () => {\n    const recipes = JSON.stringify(this.state.recipes);\n    localStorage.setItem(\"recipes\", recipes);\n  }\n  \n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1 className=\"App-title\">Recipe Search</h1>\n        </header>\n        <Form getRecipe={this.getRecipe} />\n        <Recipes recipes={this.state.recipes} />\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//const API_KEY = \"\"; in order to use: ${API_KEY}\r\n\r\nclass Recipe extends React.Component {\r\n    state = {\r\n        activeRecipe: [] \r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        const title = this.props.location.state.recipe;\r\n        const req = await fetch(`https://cors-anywhere.herokuapp.com/https://recipesapi.herokuapp.com/api/search?q=${title}&page=1`);\r\n    \r\n        const res = await req.json();\r\n        this.setState({ activeRecipe: res.recipes[0] });\r\n    }\r\n\r\n    render() {\r\n        const recipe = this.state.activeRecipe;\r\n        return(\r\n            <div className=\"container\">\r\n                { this.state.activeRecipe.length !== 0 && \r\n                    <div className=\"recipes__box\" style={{ marginTop:\"2rem\" }}>\r\n                        <div className=\"active-recipe\">\r\n                            <img className=\"active-recipe__img\" src={recipe.image_url} alt={recipe.title} />\r\n                            <h3 className=\"active-recipe__title\">{ recipe.title }</h3>\r\n                            <h4 className=\"active-recipe__publisher\">Publisher: <span>{ recipe.publisher }</span></h4> \r\n                            <p className=\"active-recipe__website\">Website: <span><a href={ recipe.publisher_url }>{ recipe.publisher_url }</a></span></p>\r\n                            <button className=\"active-recipe__button\"><Link to=\"/\">Go back</Link></button>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Recipe;","import React from 'react';\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\n\r\nimport App from \"../App\";\r\nimport Recipe from \"./Recipe\"\r\n\r\nconst Router = () => (\r\n    <BrowserRouter>\r\n        <Switch>\r\n            <Route exact path=\"/\" component={App} />\r\n            <Route path=\"/recipe/:id\" component={Recipe} />\r\n        </Switch>\r\n    </BrowserRouter>\r\n);\r\n\r\nexport default Router;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport Router from \"./components/Router\";\nimport * as serviceWorker from './serviceWorker';\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}